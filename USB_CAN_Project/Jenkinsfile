pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                dir('embedded_firmware') {
                    sh 'make'
                }
            }
        }
        stage('Generate Doxygen Documentation') {
            steps {
                dir('docs') {
                    sh 'doxygen Doxyfile'
                }
            }
        }
        stage('Check Python Version') {
            steps {
                sh 'python3 --version'
            }
        }
        stage('Run Python Tests') {
            steps {
                dir('tests') {
                    sh 'python3 -m unittest discover -s . -p "test_*.py"'
                }
            }
        }
        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
